<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="ListViewItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    </Style>

    <DataTemplate x:Key="NameDt">
        <TextBox x:Name="textboxName" Text="{Binding Name}"></TextBox>
    </DataTemplate>
    <DataTemplate x:Key="GradeDt">
        <TextBox x:Name="textboxGrade" Text="{Binding Grade}"></TextBox>
    </DataTemplate>
    <DataTemplate x:Key="ProfessionalDt">
        <TextBox x:Name="textboxProfessional" Text="{Binding Professional}"></TextBox>
    </DataTemplate>
    <DataTemplate x:Key="HasJobDt">
        <CheckBox x:Name="CheckBocHasJob" IsChecked="{Binding HasJob}"></CheckBox>
    </DataTemplate>

    <Style x:Key="DescriptionHeaderStyle24" TargetType="Label">
        <Setter Property="FontSize" Value="24" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="DescriptionHeaderStyle" TargetType="Label">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="DescriptionHeaderStyle14" TargetType="Label">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <DataTemplate x:Key="MyOrderTemplate_ListBox">
        <Grid Margin="0" Background="{
								Binding Path= Background,RelativeSource={
								RelativeSource Mode=FindAncestor,
								AncestorType={x:Type ListBox}}}">
            <Border  BorderThickness="1" BorderBrush="SteelBlue"  CornerRadius="4" Width="Auto"
					 Background="{
								Binding Path= Background,RelativeSource={
								RelativeSource Mode=FindAncestor,
								AncestorType={x:Type ListBoxItem}}}">
                <Grid Margin="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="45"></RowDefinition>
                        <RowDefinition Height="24"></RowDefinition>
                        <RowDefinition Height="24"></RowDefinition>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="75" ></ColumnDefinition>
                        <ColumnDefinition Width="*" ></ColumnDefinition>
                        <ColumnDefinition Width="100" ></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Border Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Background="#FF7EA3B8" Margin="0,0,0,10">
                        <Grid HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="90*"></ColumnDefinition>
                                <ColumnDefinition Width="10*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <WrapPanel HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="0">
                                <TextBlock  Text="提货单号："  VerticalAlignment="Center" ></TextBlock>
                                <TextBlock  Text="{Binding DDNO,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" FontSize="20" ></TextBlock>
                            </WrapPanel>
                            <!--<Button Grid.Column="1"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    BorderThickness="0"
                                    FontSize="14"
                                    Opacity="20"
                                    Content="查看详细"
                                    Command="{s:Action GetOrderListDetail }"
                                    CommandParameter="{Binding DDNO}"
                                    Style="{DynamicResource AccentedSquareButtonStyle}"></Button>-->
                        </Grid>
                    </Border>

                    <TextBlock  Grid.Row="1" Grid.Column="0"  Text="订单日期："  ></TextBlock>
                    <TextBlock  Grid.Row="1" Grid.Column="1"  Text="{Binding DDRQ,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" ></TextBlock>

                    <TextBlock Grid.Row="2" Grid.Column="0" Text="客户名称："></TextBlock>
                    <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding KH,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"></TextBlock>

                    <TextBlock  Grid.Row="1" Grid.Column="2"  Text="出库数量" />
                    <WrapPanel Grid.Row="2" Grid.Column="2" Grid.RowSpan="2">
                        <TextBlock   Text="{Binding SL,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" FontSize="24" Style="{Binding }" />
                        <TextBlock   Text="{Binding DW,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}" VerticalAlignment="Bottom" ></TextBlock>
                    </WrapPanel>
                </Grid>
            </Border>
        </Grid>
    </DataTemplate>

    <Style x:Key="MyOrderTemplateStyle_ListBox" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Control.Padding" Value="0"></Setter>
        <!--<Setter Property="FocusVisualStyle" Value="{DynamicResource MyFocusVisual}" />-->
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="#FF948F9B" />
                <Setter Property="Foreground" Value="#FF8FC4B2" />
                <!--Setter Property="CornerRadius" Value="6" />
				<<Setter Property="Focusable" Value="False" />
				<Setter Property="FocusVisualStyle" Value="{DynamicResource MyFocusVisual}" />
				<Setter Property="BorderBrush" Value="Red"></Setter>
				<Setter Property="BorderThickness" Value="0"></Setter-->
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MyButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="White" Offset="0.0" />
                    <GradientStop Color="#FF72788C" Offset="1" />
                    <GradientStop Color="#FFE6E6E6" Offset="0.201" />
                    <GradientStop Color="#FF9396A2" Offset="0.715" />
                    <GradientStop Color="#FF9B9EA7" Offset="0.582" />
                    <GradientStop Color="#FFDBDBDD" Offset="0.297" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#00211111" />
                            <GradientStop Color="#FFFBE4E4" Offset="0.478" />
                            <GradientStop Color="#00F9F586" Offset="1" />
                            <GradientStop Color="#CCEBDADA" Offset="0.599" />
                            <GradientStop Color="#33AA9494" Offset="0.224" />
                            <GradientStop Color="#33F2E9E9" Offset="0.784" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AccentCircleButtonStyle"
                                               BasedOn="{StaticResource MahApps.Metro.Styles.MetroCircleButtonStyle}"
                                               TargetType="{x:Type ButtonBase}">
        <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource AccentColorBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource GrayBrush7}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>