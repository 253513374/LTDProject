<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:model="clr-namespace:ScanCode.WPF.Model"
    xmlns:reQuest="clr-namespace:ScanCode.WPF.HubServer.ReQuest;assembly=ScanCode.WPF.HubServer"
    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf">

    <ResourceDictionary.MergedDictionaries>
        <materialDesign:BundledTheme
            BaseTheme="Light"
            PrimaryColor="DeepPurple"
            SecondaryColor="Lime" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  定义内容容器  -->
    <ItemsPanelTemplate x:Key="CustomItemsPanelTemplate">

        <UniformGrid
            Width="Auto"
            Height="Auto"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top"
            Columns="4" />
        <!--<WrapPanel Orientation="Horizontal"
                   HorizontalAlignment="Stretch" VerticalAlignment="Top"
                   Width="{Binding ElementName=MyListView, Path=ActualWidth}" />-->
    </ItemsPanelTemplate>

    <!--  ListView鼠标选择项外观  -->
    <Style x:Key="CustomListViewItemStyle" TargetType="{x:Type ListViewItem}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border
                        x:Name="Bd"
                        Height="{TemplateBinding Height}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">

                        <ContentPresenter
                            x:Name="Presenter"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="#161B21" />
                            <!--<Setter TargetName="Presenter" Property="TextElement.Foreground" Value="#F3A950" />-->
                            <Setter TargetName="Bd" Property="CornerRadius" Value="8" />
                            <!--  Change this to the desired background color  -->
                            <Setter TargetName="Bd" Property="BorderBrush" Value="Transparent" />
                            <Setter TargetName="Bd" Property="BorderThickness" Value="1" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="#80FFFFFF" />
                            <Setter TargetName="Bd" Property="CornerRadius" Value="8" />
                            <!--<Setter.Value>
                                    <ScaleTransform ScaleX="1.03" ScaleY="1.03" />
                                </Setter.Value>-->
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="#161B21" />
                            <Setter TargetName="Bd" Property="CornerRadius" Value="8" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  定义ListView数据模板  -->
    <DataTemplate x:Key="CustomItemTemplate" DataType="{x:Type model:GroupOrdersDto}">
        <materialDesign:Card
            x:Name="DataCard"
            Height="175"
            Margin="10"
            Padding="25,10,25,0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            materialDesign:ElevationAssist.Elevation="Dp4"
            Background="#5A282D33"
            Foreground="#ffffff">
            <Grid
                x:Name="GridForeground"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="30" />
                    <RowDefinition Height="70" />
                    <RowDefinition Height="35" />
                </Grid.RowDefinitions>

                <Grid
                    Grid.Row="0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                        Grid.Row="0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        FontWeight="Bold"
                        Style="{StaticResource MaterialDesignHeadline6TextBlock}"
                        Text="{Binding Ddno}"
                        TextWrapping="Wrap" />

                    <TextBlock
                        Grid.Column="1"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        FontWeight="Bold"
                        Style="{StaticResource MaterialDesignHeadline6TextBlock}"
                        Text="{Binding Totalsl}"
                        TextWrapping="Wrap" />
                </Grid>
                <!--<StackPanel Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Stretch">-->

                <TextBlock
                    Grid.Row="1"
                    Margin="0,10,0,0"
                    Style="{StaticResource MaterialDesignSubtitle1TextBlock}"
                    Text="{Binding Kh}"
                    TextWrapping="Wrap" />
                <!--</StackPanel>-->
                <Grid
                    Grid.Row="2"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBlock
                        HorizontalAlignment="Left"
                        VerticalAlignment="Bottom"
                        Style="{StaticResource MaterialDesignCaptionTextBlock}"
                        Text="{Binding Ddrq}"
                        TextWrapping="Wrap" />

                    <Button
                        x:Name="ActionButton"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        materialDesign:ButtonAssist.CornerRadius="12"
                        Background="#F3A950"
                        Command="{Binding DataContext.ItemButtonClickCommand, RelativeSource={RelativeSource AncestorType=ListView}}"
                        CommandParameter="{Binding}"
                        Content="开始扫码"
                        FontWeight="Bold"
                        Foreground="#161B21"
                        Style="{StaticResource MaterialDesignRaisedDarkButton}"
                        Visibility="Collapsed" />
                </Grid>
            </Grid>
        </materialDesign:Card>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListViewItem}}" Value="True">
                <Setter TargetName="ActionButton" Property="Visibility" Value="Visible" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <!--  定义内容数据项 GridViewRowPresenter  -->
    <ControlTemplate x:Key="CustomGridViewTemplate" TargetType="ListView">
        <Border
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="25">
            <GridViewRowPresenter />
            <!--<ScrollViewer HorizontalScrollBarVisibility="Disabled"
                          VerticalScrollBarVisibility="Auto"
                          HorizontalAlignment="Center">
                <GridViewRowPresenter Margin="20" />
            </ScrollViewer>-->
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="CustomListViewTemplate" TargetType="ListView">
        <Border
            Padding="10"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Top"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="15">
            <ScrollViewer
                HorizontalAlignment="Center"
                HorizontalScrollBarVisibility="Disabled"
                VerticalScrollBarVisibility="Auto">
                <ItemsPresenter />
            </ScrollViewer>
        </Border>
    </ControlTemplate>

    <Style x:Key="ColoredGridViewRowPresenterStyle" TargetType="{x:Type GridViewRowPresenter}">
        <Setter Property="TextElement.Foreground" Value="Blue" />
    </Style>

    <Style TargetType="ListViewItem">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <GridViewRowPresenter Content="{Binding}" Style="{StaticResource ColoredGridViewRowPresenterStyle}" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
        自定义ListView表头颜色。继承原有属性的基础上修改字体颜色，
        把表头字体颜色绑定到ListView的Foreground前景色
    -->
    <Style
        x:Key="ColoredGridViewColumnHeaderStyle"
        BasedOn="{StaticResource {x:Type GridViewColumnHeader}}"
        TargetType="{x:Type GridViewColumnHeader}">

        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}, Path=Foreground}" />
    </Style>

    <!--<DataTemplate   x:Key="CustomGridViewTemplateDetail" DataType="{x:Type reQuest:OrderDetail}">

        <GridView>
            <GridView.ColumnHeaderContainerStyle>
                <StaticResource ResourceKey="ColoredGridViewColumnHeaderStyle" />
            </GridView.ColumnHeaderContainerStyle>
            <GridViewColumn Width="Auto" Header="型号"
                                DisplayMemberBinding="{Binding GGXH}" />
            <GridViewColumn Width="Auto" Header="数量"

                                DisplayMemberBinding="{Binding SL}" />
            <GridViewColumn Width="Auto" Header="单位"

                                DisplayMemberBinding="{Binding DW}" />
            <GridViewColumn Width="Auto" Header="颜色"

                                DisplayMemberBinding="{Binding YS}" />
        </GridView>
    </DataTemplate>-->
</ResourceDictionary>