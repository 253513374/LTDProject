@page "/"
@using Radzen.Blazor
@using Wtdl.Repository.Data
@using System.Globalization
@using Weitedianlan.Model.Entity.Analysis


@inject LotteryRecordRepository _LotteryRecordRepository
@inject WLabelStorageRepository _WLabelStorageRepository
@inject OutStorageRepository _outStorageRepository


<MudPageTitle Title="数据面板" Description="系统数据分析统计"></MudPageTitle>
<MudStack Row="true">
    <MudPaper Elevation="2"  Style="background-color: deepskyblue " Class="mud-paper-1 bg-opacity-50 bg-info">
        <MudCard>
            <MudCardContent>
                <MudGrid>
                    <MudItem xs="12" sm="12" md="12" lg="12">
                        <MudText Typo="Typo.h6">抽奖人数</MudText>
                    </MudItem>
                    <MudItem xs="12" sm="12" md="12" lg="12">
                        <MudText Typo="Typo.h4">Count</MudText>
                    </MudItem>
                </MudGrid>
            </MudCardContent>
        </MudCard>
    </MudPaper>
</MudStack>

<MudGrid>
    <MudItem xs="12" sm="6" md="4" lg="3">
       
    </MudItem>
    <MudItem xs="12" sm="6" md="4" lg="3">
        <MudPaper Elevation="2" Class="mud-paper-1">
            <MudCard>
                <MudCardContent>
                    <MudGrid>
                        <MudItem xs="12" sm="12" md="12" lg="12">
                            <MudText Typo="Typo.h6">红包发放金额</MudText>
                        </MudItem>
                        <MudItem xs="12" sm="12" md="12" lg="12">
                            <MudText Typo="Typo.h4">Count</MudText>
                        </MudItem>
                    </MudGrid>
                </MudCardContent>
            </MudCard>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="6" md="4" lg="3">
        <MudPaper Elevation="2" Class="mud-paper-1">
            <MudCard>
                <MudCardContent>
                    <MudGrid>
                        <MudItem xs="12" sm="12" md="12" lg="12">
                            <MudText Typo="Typo.h6">活动数量</MudText>
                        </MudItem>
                        <MudItem xs="12" sm="12" md="12" lg="12"></MudItem>
                    </MudGrid>
                </MudCardContent>
            </MudCard>
        </MudPaper>
    </MudItem>
</MudGrid>


<MudGrid >
    <MudItem xs="12" sm="12" md="2">
        <MudPaper Elevation="20" Class="d-flex flex-row pt-6 pb-4" >
            <MudIcon Icon="@Icons.Material.Filled.ViewCarousel" Color="Color.Primary" Class="mx-4" Style="width:54px; height:54px;"></MudIcon>
            <div style="width: 100%">
               @* <MudStack Row="true" Justify="Justify.SpaceAround" Spacing="2" >
                    <MudText Typo="Typo.caption" Align="Align.End" Class="mud-text-secondary mb-n1">@CountTitleText </MudText>
                </MudStack>*@
                <MudText Typo="Typo.subtitle1" Class="mud-text-secondary mb-n1">今日出货量</MudText>
                <MudText Typo="Typo.h5"></MudText>
            </div>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="12" md="2">
        <MudPaper Elevation="20" Class="d-flex flex-row pt-6 pb-4">
            <MudIcon Icon="@Icons.Material.Filled.ViewCarousel" Color="Color.Primary" Class="mx-4" Style="width:54px; height:54px;"></MudIcon>
            <div style="width: 100%">
               @* <MudStack Row="true" Justify="Justify.SpaceAround" Spacing="2">
                    <MudText Typo="Typo.caption" Align="Align.End" Class="mud-text-secondary mb-n1">@CountTitleText </MudText>
                </MudStack>*@
                <MudText Typo="Typo.subtitle1" Class="mud-text-secondary mb-n1">今年出货量</MudText>
                <MudText Typo="Typo.h5"></MudText>
            </div>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="6" md="2">
        <MudPaper Elevation="20" Class="d-flex flex-row pt-6 pb-4">
            <MudIcon Icon="@Icons.Material.Filled.ViewCarousel" Color="Color.Primary" Class="mx-4" Style="width: 54px; height: 54px;"></MudIcon>
            <div style="width: 100%">
                <MudStack Row="true" Justify="Justify.SpaceAround" Spacing="2">
                    <MudText Typo="Typo.caption" Align="Align.End" Class="mud-text-secondary mb-n1">@RadzenChartTitleText </MudText>
                </MudStack>
                <MudText Typo="Typo.subtitle1" Class="mud-text-secondary mb-n1">总出货量</MudText>
                <MudText Typo="Typo.h5">@AllYearCount</MudText>
            </div>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="6" md="2">
        <MudPaper Elevation="20" Class="d-flex flex-row pt-6 pb-4">
            <MudIcon Icon="@Icons.Material.Filled.ViewCarousel" Color="Color.Primary" Class="mx-4" Style="width: 54px; height: 54px;"></MudIcon>
            <div style="width: 100%">
                <MudStack Row="true" Justify="Justify.SpaceAround" Spacing="2">
                    <MudText Typo="Typo.caption" Align="Align.End" Class="mud-text-secondary mb-n1">@RadzenChartTitleText </MudText>
                </MudStack>
                <MudText Typo="Typo.subtitle1" Class="mud-text-secondary mb-n1">总订单量</MudText>
                <MudText Typo="Typo.h5">@OrderCount</MudText>
            </div>
        </MudPaper>
    </MudItem>
    @if (isgetyear)
    {
        <MudItem xs="12" sm="12" md="12">
            <MudPaper Elevation="4" Class="pa-8">
                <MudText Typo="Typo.h6"> 年销量分析图表 </MudText>
              
                    <RadzenCard class="w-100 mb-4" Style="display: flex; align-items: center; gap: 0.5rem" >
                        <RadzenCheckBox @bind-Value="@smooth" Name="smooth"></RadzenCheckBox>
                        <RadzenLabel Text="平滑" For="smooth" Style="margin-right: 1rem;"/>
                        <RadzenCheckBox @bind-Value="@showDataLabels" Name="dataLabels"></RadzenCheckBox>
                        <RadzenLabel Text="数据标签" For="dataLabels" />
                    </RadzenCard>
                    <RadzenChart>
                        <RadzenAreaSeries Smooth="@smooth" Data="@GroupByYearCounts" CategoryProperty="Year" Title="@RadzenChartTitleText" ValueProperty="Count" RenderingOrder="1">
                            <RadzenSeriesDataLabels Visible="@showDataLabels" />
                            <RadzenGridLines Visible="true" />
                            <RadzenLegend Position="LegendPosition.Top" />
                        </RadzenAreaSeries>
                    
                        @*   <RadzenCategoryAxis Padding="20" Formatter="@FormatAsMonth" />
                            <RadzenValueAxis Formatter="@FormatAsUSD">
                            <RadzenGridLines Visible="true" />
                            <RadzenAxisTitle Text="Revenue in USD" />
                        </RadzenValueAxis>*@
                    </RadzenChart>
              


            </MudPaper>
        </MudItem>
        <MudItem xs="12" sm="12" md="12">
            <MudPaper Elevation="4" Class="pa-8">
                <MudText Typo="Typo.h6"> 年份订单总量对比 </MudText>
               
                <RadzenCard class="w-100 mb-4" Style="display: flex; align-items: center; gap: 0.5rem">
                    <RadzenCheckBox @bind-Value="@smooth" Name="smooth"></RadzenCheckBox>
                    <RadzenLabel Text="平滑" For="smooth" Style="margin-right: 1rem;" />
                <RadzenCheckBox @bind-Value="@showDataLabels" Name="dataLabels"></RadzenCheckBox>
                    <RadzenLabel Text="数据标签" For="dataLabels" />
                </RadzenCard>
                <RadzenChart>
                @*    <RadzenAreaSeries Smooth="@smooth" Data="@GroupByYearCounts" CategoryProperty="Year" Title="@RadzenChartTitleText" ValueProperty="Count" RenderingOrder="1">
                        <RadzenSeriesDataLabels Visible="@showDataLabels" />
                    </RadzenAreaSeries>*@
                    <RadzenAreaSeries Smooth="@smooth" Data="@GroupByYearOrders" CategoryProperty="Year" Title="@RadzenChartTitleText" LineType="LineType.Dashed" ValueProperty="Count">
                        <RadzenSeriesDataLabels Visible="@showDataLabels" />
                        <RadzenGridLines Visible="true" />
                        <RadzenLegend Position="LegendPosition.Top" />
                    </RadzenAreaSeries>
                    @*   <RadzenCategoryAxis Padding="20" Formatter="@FormatAsMonth" />
                <RadzenValueAxis Formatter="@FormatAsUSD">
                <RadzenGridLines Visible="true" />
                <RadzenAxisTitle Text="Revenue in USD" />
                </RadzenValueAxis>*@
                </RadzenChart>
               

            </MudPaper>
            </MudItem>
    }
    else
    {
        <MudSkeletonComponent></MudSkeletonComponent>
    }
</MudGrid>
@*<PageTitle>Index</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Hello, world!</MudText>
<MudText Class="mb-8">Welcome to your new app, powered by MudBlazor!</MudText>
<MudAlert Severity="Severity.Normal">You can find documentation and examples on our website here: <MudLink Href="https://mudblazor.com" Typo="Typo.body2" Color="Color.Inherit"><b>www.mudblazor.com</b></MudLink></MudAlert>
*@
@code
{


    private bool isgetyear = false;
    private bool isgetorder = false;
    
    private string RadzenChartTitleText;

    
    private double AllYearCount { set; get; }
    private double OrderCount{ set; get; }
    List<ChartSeries> OrderSeries = new();


  
    
    protected async override Task OnInitializedAsync()
    {
       await GetAllYearCountAsync();
       // await GetOrderNumberAsync();
    }

    private List<OutStorageAnalysis> GroupByYearCounts { set; get; }
    private List<OutStorageAnalysis> GroupByYearOrders { set; get; }

    private  async Task GetAllYearCountAsync()
    {
       
        GroupByYearOrders = await _outStorageRepository.GetGrapByYearAndOrderAsync();

        var  groupbyyearorders = await _outStorageRepository.GetGrapByYearAsync();

         
        GroupByYearCounts = groupbyyearorders.GroupBy(g => g.Year).Select(s =>
            new OutStorageAnalysis
            {
                Year = s.Key,
                Count = s.Sum(s => s.Count),
            }).ToList();

        RadzenChartTitleText = $"{GroupByYearOrders.Min(s => s.Year)}-{GroupByYearOrders.Max(s => s.Year)}";

        AllYearCount = GroupByYearCounts.Sum(s => s.Count);
        OrderCount = GroupByYearOrders.Sum(s => s.Count);
        isgetyear = true;
    }
    
    /// <summary>
    /// 获取订单总数
    /// </summary>
    //private async Task GetOrderNumberAsync()
    //{
    //    var glist = await _WLabelStorageRepository.GetGroupByOrderNumbelsAsync(DateTime.Now.Year);

       
    //    OrderCount = glist.Sum(s => s.Count);

    //    //图表X轴数据
    //    OrderXAxisLabels = glist.Select(s => s.Year.ToString()).ToArray();

    //    //图表展示数据
    //    OrderSeries.Add(new ChartSeries() { Name = "年份订单总量对比", Data = glist.Select(x => x.Count).ToArray() });

    //    isgetorder = true;
    //}


    bool smooth = true;
    bool showDataLabels = true;

    string FormatAsUSD(object value)
    {
        return ((double)value).ToString("C0", CultureInfo.CreateSpecificCulture("en-US"));
    }

    string FormatAsMonth(object value)
    {
        if (value != null)
        {
            return Convert.ToDateTime(value).ToString("MMM");
        }

        return string.Empty;
    }


    
}
