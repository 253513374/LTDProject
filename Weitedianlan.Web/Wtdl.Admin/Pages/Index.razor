@page "/"
@using Wtdl.Repository.Data


@inject LotteryRecordRepository _LotteryRecordRepository
@inject WLabelStorageRepository _WLabelStorageRepository


<MudPageTitle Title="数据面板" Description="系统数据分析统计"></MudPageTitle>


<MudGrid>
    <MudItem xs="12" sm="6" md="4">
        <MudPaper Elevation="20" Class="d-flex flex-row pt-6 pb-4" >
            <MudIcon Icon="@Icons.Material.Filled.ViewCarousel" Color="Color.Primary" Class="mx-4" Style="width:54px; height:54px;"></MudIcon>
            <div style="width: 100%">
                <MudStack Row="true" Justify="Justify.SpaceAround" Spacing="2" >
                    
                    <MudText Typo="Typo.caption" Align="Align.End" Class="mud-text-secondary mb-n1">@CountTitleText </MudText>
                </MudStack>
                <MudText Typo="Typo.subtitle1" Class="mud-text-secondary mb-n1">总出货量</MudText>
                <MudText Typo="Typo.h5">@AllYearCount</MudText>
            </div>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="6" md="4">
        <MudPaper Elevation="20" Class="d-flex flex-row pt-6 pb-4" >
            <MudIcon Icon="@Icons.Material.Filled.ViewCarousel" Color="Color.Primary" Class="mx-4" Style="width:54px; height:54px;"></MudIcon>
            <div style="width: 100%">
                <MudStack Row="true" Justify="Justify.SpaceAround" Spacing="2" >
                    
                    <MudText Typo="Typo.caption" Align="Align.End" Class="mud-text-secondary mb-n1">@CountTitleText </MudText>
                </MudStack>
                <MudText Typo="Typo.subtitle1" Class="mud-text-secondary mb-n1">总订单量</MudText>
                <MudText Typo="Typo.h5">@OrderCount</MudText>
            </div>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="12" md="4">
        <MudPaper Elevation="20" Class="d-flex flex-row pt-6 pb-4" >
            <MudIcon Icon="@Icons.Material.Filled.ViewCarousel" Color="Color.Primary" Class="mx-4" Style="width:54px; height:54px;"></MudIcon>
            <div style="width: 100%">
                <MudStack Row="true" Justify="Justify.SpaceAround" Spacing="2" >
                    
                    <MudText Typo="Typo.caption" Align="Align.End" Class="mud-text-secondary mb-n1">@CountTitleText </MudText>
                </MudStack>
                <MudText Typo="Typo.subtitle1" Class="mud-text-secondary mb-n1">总出货量</MudText>
                <MudText Typo="Typo.h5">@AllYearCount</MudText>
            </div>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="12" md="6">
        <MudPaper Elevation="4" Class="pa-4"  >
            <MudText Typo="Typo.h6"> 年销量分析图表 </MudText>
            @if (isgetyear)
            {
                <MudChart ChartType="ChartType.Line" ChartSeries="@YearSeries" XAxisLabels="@YearXAxisLabels" Width="100%" Height="350px">
            </MudChart>
            }
            else
            {
                <MudSkeletonComponent></MudSkeletonComponent>
            }
          
           
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="12" md="6">
        <MudPaper Elevation="4" Class="pa-4">
            <MudText Typo="Typo.h6"> 年份订单总量对比 </MudText>
            @if (isgetorder)
            {
                <MudChart ChartType="ChartType.Line" ChartSeries="@OrderSeries" XAxisLabels="@OrderXAxisLabels" Width="100%" Height="350px">
                </MudChart>
            }
            else
            {
                <MudSkeletonComponent></MudSkeletonComponent>
            }
           
        </MudPaper>
    </MudItem>
</MudGrid>
@*<PageTitle>Index</PageTitle>

<MudText Typo="Typo.h3" GutterBottom="true">Hello, world!</MudText>
<MudText Class="mb-8">Welcome to your new app, powered by MudBlazor!</MudText>
<MudAlert Severity="Severity.Normal">You can find documentation and examples on our website here: <MudLink Href="https://mudblazor.com" Typo="Typo.body2" Color="Color.Inherit"><b>www.mudblazor.com</b></MudLink></MudAlert>
*@
@code
{

    private int Year = DateTime.Now.Year;
    private int Month = DateTime.Now.Month;

    private bool isgetyear = false;
    private bool isgetorder = false;
    
    private string CountTitleText;
   // private List<YMDGroupByCount> GroupByCounts;
    private double AllYearCount { set; get; }
    List<ChartSeries> YearSeries = new List<ChartSeries>();
    string[] YearXAxisLabels = { "1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月" };


    private double OrderCount{ set; get; }
    List<ChartSeries> OrderSeries = new List<ChartSeries>();
    string[] OrderXAxisLabels = new[]{""};

  
    
    protected async override Task OnInitializedAsync()
    {
       await GetAllYearCountAsync();
        await GetOrderNumberAsync();
    }


    private  async Task GetAllYearCountAsync()
    {
       
       var GroupByCounts = await _WLabelStorageRepository.GetYearGroupByListAsync();
        GroupByCounts = GroupByCounts.Where(w => Int32.Parse(w.Year) >= 2016 && Int32.Parse(w.Year) < Year).ToList();

        YearXAxisLabels = GroupByCounts.Select(s => s.Year).ToArray();
        YearSeries.Add(new ChartSeries() { Name = "年销量分析图表", Data = GroupByCounts.Select(x => x.Count).ToArray() });


        AllYearCount = GroupByCounts.Sum(s => s.Count);
        CountTitleText = $"{YearXAxisLabels[0]}-{YearXAxisLabels[YearXAxisLabels.Length - 1]}";

        isgetyear = true;
    }
    
    /// <summary>
    /// 获取订单总数
    /// </summary>
    private async Task GetOrderNumberAsync()
    {
        var glist = await _WLabelStorageRepository.GetGroupByOrderNumbelsAsync(DateTime.Now.Year);

       
        OrderCount = glist.Sum(s => s.Count);
        OrderXAxisLabels = glist.Select(s => s.Year.ToString()).ToArray();

        OrderSeries.Add(new ChartSeries() { Name = "年份订单总量对比", Data = glist.Select(x => x.Count).ToArray() });

        isgetorder = true;
    }
    
}
