
@page "/scanbyredpacketmanage"


@inject ScanRedPacketRepository _redPacketRepository
@inject ISnackbar Snackbar

<MudStack >
    <MudCard Elevation="24" Style="width: 500px" >
        <MudForm Model="@RedPacket" @ref="@form" Validation="@(PacketValidator.ValidateValue)" ValidationDelay="0">
            <MudCardHeader>
                <CardHeaderAvatar>
                    <MudAvatar Color="Color.Error"><b style="font-weight: 600">福</b></MudAvatar>
                </CardHeaderAvatar>
                <CardHeaderContent>
                    <MudText Typo="Typo.body1">扫码立即领取现金</MudText>
                    <MudTextField @bind-Value="RedPacket.ActivityName" For="() => RedPacket.ActivityName" Label="活动名称">活动名称</MudTextField>
                </CardHeaderContent>
                <CardHeaderActions>
                    <MudSwitch @bind-Checked="@RedPacket.IsActivity" Color="Color.Info">@(RedPacket.IsActivity?"已启用":"已禁用")</MudSwitch>
                </CardHeaderActions>
            </MudCardHeader>
            <MudCardMedia Image="images/a红包.jpg" Height="200" />
            <MudCardContent  >
                <MudStack Row="true" Reverse="false">
                    <MudText Class="mb-2" Typo="Typo.h5">配置红包</MudText>
                    <MudSpacer></MudSpacer>
                    <MudSwitch  @bind-Checked="@RedPacket.IsSubscribe" Color="Color.Success">关注公众号才能领取红包</MudSwitch>    
                </MudStack>
                   
                <MudStack Spacing="3">

                        <MudTextField @bind-Value="RedPacket.SenderName" For="() => RedPacket.SenderName" Label="发放红包人员名称"></MudTextField>
                        <MudTextField @bind-Value="RedPacket.WishingWord" For="() => RedPacket.WishingWord" Label="红包祝福语"></MudTextField>
                    <MudSelect Variant="Variant.Text" Label="红包类型" @bind-Value="RedPacket.RedPacketType" For="() => RedPacket.RedPacketType">
                       
                        <MudSelectItem Value="RedPacketType.AVERAGE">固定红包</MudSelectItem>
                        <MudSelectItem Value="RedPacketType.RANDOM">随机红包</MudSelectItem>
                    </MudSelect>
                    @if (RedPacket.RedPacketType == RedPacketType.AVERAGE)
                    {
                        <MudTextField @bind-Value="RedPacket.CashValue" For="() => RedPacket.CashValue" Label="单个红包金额"></MudTextField>
                    }
                    @if (RedPacket.RedPacketType == RedPacketType.RANDOM)
                    {
                        <MudStack Row="true" Spacing="3">
                            <MudTextField Variant="Variant.Outlined" @bind-Value="RedPacket.MinCashValue" For="() => RedPacket.MinCashValue" Label="最小红包金额"></MudTextField>
                            <MudTextField Variant="Variant.Outlined" @bind-Value="RedPacket.MaxCashValue" For="() => RedPacket.MaxCashValue" Label="最大红包金额"></MudTextField>
                        </MudStack>
                    }
                </MudStack>

            </MudCardContent>
            <MudCardActions >
                <MudButton Variant="Variant.Filled" OnClick="@(() => UpdateRedPacket())" StartIcon="@Icons.Material.Filled.Update" Color="Color.Primary" FullWidth="true"> 配置立即生效</MudButton>
                
            </MudCardActions>
        </MudForm>
    </MudCard>
</MudStack>

@code {

    private ScanRedPacket RedPacket = new ScanRedPacket();

    private MudForm form { set; get; }

    RedPacketValidator PacketValidator = new RedPacketValidator();



    protected async override Task OnInitializedAsync()
    {
        RedPacket = await _redPacketRepository.FindScanRedPacketAsync();
    }

   


    private async Task UpdateRedPacket()
    {
        await form.Validate();
        if (form.IsValid)
        {
            var result = await _redPacketRepository.UpdateOrInsert(RedPacket);
            if (result>0)
            {
                Snackbar.Add("扫码得现金红包配置更新成功", Severity.Success);
            }
            else
            {
                Snackbar.Add("扫码得现金红包配置更新失败", Severity.Error);
            }
        }
        return;
    
    }

}
