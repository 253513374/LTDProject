// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wtdl.Repository;

#nullable disable

namespace Wtdl.Repository.Migrations
{
    [DbContext(typeof(LotteryContext))]
    [Migration("20230402061727_add-db")]
    partial class adddb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Wtdl.Model.Entity.ActivityPrize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("CashValue")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsJoinActivity")
                        .HasColumnType("bit");

                    b.Property<int?>("LotteryActivityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrizeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Probability")
                        .HasColumnType("float");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UniqueNumber")
                        .HasColumnType("int");

                    b.Property<int>("Unredeemed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LotteryActivityId");

                    b.ToTable("ActivityPrize", (string)null);
                });

            modelBuilder.Entity("Wtdl.Model.Entity.Agent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AAddr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ABelong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ACity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("APeople")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AProvince")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ATel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AType")
                        .HasColumnType("int");

                    b.Property<string>("AdminUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("datetiem")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.ToTable("tAgent", (string)null);

                    b.HasAnnotation("SqlServer:MemoryOptimizedSize", 204800);

                    SqlServerEntityTypeBuilderExtensions.IsMemoryOptimized(b);
                });

            modelBuilder.Entity("Wtdl.Model.Entity.Analysis.OutStorageAnalysis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Count")
                        .HasColumnType("float");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("OrderNumbels")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OutStorage", "Analysis");
                });

            modelBuilder.Entity("Wtdl.Model.Entity.FileUploadRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<long>("FileCount")
                        .HasColumnType("bigint");

                    b.Property<string>("FileHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UploadTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FileUploadRecords");
                });

            modelBuilder.Entity("Wtdl.Model.Entity.LotteryActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActivityImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActivityNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("AllowDuplicate")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowMultipleWinning")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TotalParticipant")
                        .HasColumnType("int");

                    b.Property<int>("TotalWinner")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreateTime");

                    b.ToTable("LotteryActivity", (string)null);
                });

            modelBuilder.Entity("Wtdl.Model.Entity.LotteryRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActivityDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActivityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActivityNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CashValue")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ClaimTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Claimed")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<bool>("IsSuccessPrize")
                        .HasColumnType("bit");

                    b.Property<string>("OpenId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PrizeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrizeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrizeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QRCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("OpenId");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("OpenId"), false);

                    b.HasIndex("QRCode");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("QRCode"), false);

                    b.HasIndex("QRCode", "OpenId");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("QRCode", "OpenId"), false);

                    b.ToTable("LotteryRecord", (string)null);

                    b.HasAnnotation("SqlServer:MemoryOptimizedSize", 1048576);

                    SqlServerEntityTypeBuilderExtensions.IsMemoryOptimized(b);
                });

            modelBuilder.Entity("Wtdl.Model.Entity.Prize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CashValue")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsJoinActivity")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrizeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Probability")
                        .HasColumnType("float");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UniqueNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreateTime");

                    b.ToTable("Prize", (string)null);
                });

            modelBuilder.Entity("Wtdl.Model.Entity.RedPacketRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Captcha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CashAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("IssueTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("MchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MchbillNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NonceStr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaySign")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QrCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ReOpenId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("ReceiveTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SendListid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TotalAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WxAppId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("CreateTime");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("CreateTime"), false);

                    b.HasIndex("QrCode");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("QrCode"), false);

                    b.HasIndex("ReOpenId");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("ReOpenId"), false);

                    b.HasIndex("QrCode", "ReOpenId");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("QrCode", "ReOpenId"), false);

                    b.ToTable("RedPacketRecords");

                    b.HasAnnotation("SqlServer:MemoryOptimizedSize", 1048576);

                    SqlServerEntityTypeBuilderExtensions.IsMemoryOptimized(b);
                });

            modelBuilder.Entity("Wtdl.Model.Entity.ScanRedPacket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActivityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdminUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CashValue")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActivity")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSubscribe")
                        .HasColumnType("bit");

                    b.Property<int>("MaxCashValue")
                        .HasColumnType("int");

                    b.Property<int>("MinCashValue")
                        .HasColumnType("int");

                    b.Property<int>("RedPacketType")
                        .HasColumnType("int");

                    b.Property<string>("ScanRedPacketGuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WishingWord")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ScanRedPackets");
                });

            modelBuilder.Entity("Wtdl.Model.Entity.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AgentID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2023, 4, 2, 14, 17, 27, 911, DateTimeKind.Local).AddTicks(3387));

                    b.Property<int>("Flag")
                        .HasColumnType("int");

                    b.Property<string>("PWD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("tUser", (string)null);
                });

            modelBuilder.Entity("Wtdl.Model.Entity.UserAwardInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AwardDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("AwardName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DateReceived")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullAddress")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("IsShipped")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ProvinceOrState")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("WeChatOpenId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("UserAwardInfos", (string)null);
                });

            modelBuilder.Entity("Wtdl.Model.Entity.VerificationCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Captcha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("FileHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QRCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("QRCode")
                        .IsUnique()
                        .HasFilter("[QRCode] IS NOT NULL");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("QRCode"), false);

                    b.ToTable("VerificationCodes");

                    b.HasAnnotation("SqlServer:MemoryOptimizedSize", 1048576);

                    SqlServerEntityTypeBuilderExtensions.IsMemoryOptimized(b);
                });

            modelBuilder.Entity("Wtdl.Model.Entity.W_LabelStorage", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("AdminUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adminaccount")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<DateTime>("CreateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Dealers")
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.Property<string>("ExtensionName")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("ExtensionOrder")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasDefaultValue("");

                    b.Property<string>("OrderNumbels")
                        .HasMaxLength(28)
                        .HasColumnType("nvarchar(28)");

                    b.Property<DateTime>("OrderTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("OutTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("OutType")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("QRCode")
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.HasKey("ID");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("ID"), false);

                    b.HasIndex("ID");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("ID"), false);

                    b.HasIndex("OutTime");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("OutTime"), false);

                    b.HasIndex("QRCode");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("QRCode"), false);

                    b.ToTable("W_LabelStorage", (string)null);

                    b.HasAnnotation("SqlServer:MemoryOptimizedSize", 5242880);

                    SqlServerEntityTypeBuilderExtensions.IsMemoryOptimized(b);
                });

            modelBuilder.Entity("Wtdl.Model.Entity.ActivityPrize", b =>
                {
                    b.HasOne("Wtdl.Model.Entity.LotteryActivity", "LotteryActivity")
                        .WithMany("Prizes")
                        .HasForeignKey("LotteryActivityId");

                    b.Navigation("LotteryActivity");
                });

            modelBuilder.Entity("Wtdl.Model.Entity.LotteryActivity", b =>
                {
                    b.Navigation("Prizes");
                });
#pragma warning restore 612, 618
        }
    }
}
